{"version":3,"sources":["axios.js","Row.js","Requests.js","Banner.js","Nav.js","App.js","reportWebVitals.js","index.js"],"names":["instace","axios","create","baseURL","Row","title","fetchUrl","isLargeRow","useState","movies","setMovies","trailerUrl","setTrailerUrl","useEffect","a","get","request","data","results","fetchData","className","map","movie","onClick","console","log","movieTrailer","name","original_title","original_name","then","url","urlParams","URLSearchParams","URL","search","catch","error","handleClick","src","poster_path","backdrop_path","alt","id","videoId","opts","height","width","playerVars","autoplay","API_KEY","requests","fetchTrending","fetchNetflixOriginals","fetchTopRated","fetchActionMovies","fetchComedyMovies","fetchHorrorMovies","fetchRomanceMovies","fetchDocumentaries","Banner","str","n","setMovie","Math","floor","random","length","style","backgroundSize","backgroundImage","backgroundPosition","overview","substr","Nav","show","handleShow","window","addEventListener","scrollY","removeEventListener","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0e3a0393.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\n\r\nconst instace = axios.create({\r\n    baseURL: \"https://api.themoviedb.org/3/\",\r\n});\r\n\r\nexport default instace;","import React, {useState, useEffect} from 'react';\r\nimport './Row.css';\r\nimport YouTube from 'react-youtube';\r\nimport axios from \"./axios\";\r\nimport movieTrailer from \"movie-trailer\";\r\n\r\nconst base_url = \"https://images.tmdb.org/t/p/original/\"\r\n\r\nfunction Row({title, fetchUrl, isLargeRow}) {\r\n    \r\n    const [movies, setMovies] = useState([]);\r\n\r\n    const [trailerUrl, setTrailerUrl] = useState(\"\");\r\n\r\n    useEffect( () => {\r\n        \r\n        async function fetchData() {\r\n            const request  = await axios.get(fetchUrl);\r\n            setMovies(request.data.results);\r\n            return request;\r\n        }\r\n\r\n        fetchData();\r\n\r\n    }, [fetchUrl]);\r\n    \r\n    const opts = {\r\n        height: '390',\r\n        width: '100%',\r\n        playerVars: {\r\n          // https://developers.google.com/youtube/player_parameters\r\n          autoplay: 1,\r\n        }\r\n    };\r\n\r\n    const handleClick = (movie)  => {\r\n        console.log(movie);\r\n        if(trailerUrl) {\r\n            setTrailerUrl(\"\");\r\n        }else{\r\n            movieTrailer(movie?.name || movie?.original_title || movie?.original_name || movie?.title || \"\")\r\n            .then((url) => {\r\n                \r\n                const urlParams = new URLSearchParams(new URL(url).search);\r\n                setTrailerUrl(urlParams.get('v'));\r\n\r\n            }).catch(error => console.log(error));\r\n        }\r\n    }\r\n    \r\n\r\n    return (\r\n        <div className=\"row\">\r\n            <h2 className=\"row__title\">{title}</h2>\r\n            <div className=\"row__posters\">\r\n                {movies.map(movie => (\r\n                    <img \r\n                        key={movie.id}\r\n                        onClick = {() => handleClick(movie)}\r\n                        className={`row__poster ${isLargeRow && \"row__posterLarge\"}`}\r\n                        src={`${base_url}${isLargeRow ? movie.poster_path: movie.backdrop_path}`} \r\n                        alt={movie.title} \r\n\r\n                    />\r\n                ))}\r\n            </div>\r\n            {trailerUrl && <YouTube videoId={trailerUrl} opts={opts} />}\r\n        </div>\r\n    );\r\n\r\n\r\n}\r\n\r\nexport default Row;","\r\nconst API_KEY = '98a499285b4ecb1c1d64f6cd4fd89998';\r\n\r\nconst requests = {\r\n    \r\n    fetchTrending: `/trending/all/week?api_key=${API_KEY}&language=en-US`,\r\n    fetchNetflixOriginals: `/discover/tv?api_key=${API_KEY}&with_networks=213`,\r\n    fetchTopRated: `/movie/top_rated?api_key=${API_KEY}&language=en-US`,\r\n    fetchActionMovies: `/discover/movie?api_key=${API_KEY}&with_genres=28`,\r\n    fetchComedyMovies: `/discover/movie?api_key=${API_KEY}&with_genres=35`,\r\n    fetchHorrorMovies: `/discover/movie?api_key=${API_KEY}&with_genres=27`,\r\n    fetchRomanceMovies: `/discover/movie?api_key=${API_KEY}&with_genres=10749`,\r\n    fetchDocumentaries: `/discover/movie?api_key=${API_KEY}&with_genres=99`,\r\n\r\n};\r\n\r\nexport default requests;","import React, { useState,  useEffect } from 'react';\r\nimport './Banner.css';\r\nimport axios from \"./axios\";\r\nimport requests from \"./Requests\";\r\n\r\nfunction Banner() {\r\n    \r\n    const [movie, setMovie] = useState([]);\r\n    \r\n    useEffect(() => {\r\n        \r\n        async function fetchData() {\r\n           \r\n            const request = await axios.get(requests.fetchNetflixOriginals);\r\n            console.log(movie);\r\n            setMovie(request.data.results[\r\n                Math.floor(Math.random() * request.data.results.length - 1)\r\n            ]);\r\n            return request;\r\n        }\r\n        fetchData();\r\n    }, []);\r\n    \r\n    console.log(movie); \r\n\r\n    function truncate(str, n) {\r\n        if (str) {\r\n            return (str.length > n) ? str.substr(0, n-1) + '...' : str;\r\n        }else{\r\n            return '';\r\n        }\r\n        \r\n    }\r\n\r\n    return (\r\n        <header className=\"banner\"\r\n                \r\n            style={{\r\n                backgroundSize: \"cover\",\r\n                backgroundImage: `url(\"https://image.tmdb.org/t/p/original/${movie?.backdrop_path}\")`,\r\n                backgroundPosition: \"center center\"\r\n            }}>\r\n            <div className=\"banner__contents\">\r\n\r\n                <h1 className=\"banner__title\">{ movie?.title || movie?.name || movie?.original_name}</h1>\r\n                \r\n                <div className=\"banner__buttons\">\r\n                    <button className=\"banner__button\">Play</button>\r\n                    <button className=\"banner__button\">My Lists</button>\r\n                </div>\r\n                \r\n                <h1 className=\"banner__description\">\r\n                    {truncate(movie?.overview, 150)}\r\n                </h1>\r\n            </div> \r\n            <div className=\"banner__fadeBottom\"></div>\r\n        </header>\r\n        \r\n    )\r\n}\r\n\r\nexport default Banner;","import React, { useEffect, useState } from 'react';\r\nimport './Nav.css';\r\n\r\nfunction Nav() {\r\n\r\n    const [show, handleShow] = useState(false);\r\n\r\n\r\n    \r\n    useEffect(() => {\r\n        window.addEventListener(\"scroll\", () => {\r\n            if(window.scrollY > 100) {\r\n                handleShow(true);\r\n            }else{\r\n                handleShow(false);\r\n            } \r\n        }); \r\n        return () => {\r\n            window.removeEventListener(\"scroll\");\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <div className={`nav ${show && \"nav__black\"}`}>\r\n            <img\r\n                className=\"nav__logo\"\r\n                src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/0/08/Netflix_2015_logo.svg/170px-Netflix_2015_logo.svg.png\"\r\n                alt=\"Netflix logo\"\r\n            />\r\n\r\n            <img\r\n                className=\"nav__avatar\"\r\n                src=\"https://i.pinimg.com/originals/0d/dc/ca/0ddccae723d85a703b798a5e682c23c1.png\"\r\n                alt=\"Netflix logo\"\r\n            />\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Nav;","import './App.css';\nimport Row from './Row';\nimport requests from './Requests';\nimport Banner from './Banner';\nimport Nav from './Nav'; \n\nfunction App() {\n  return (\n    <div className=\"App\">\n      \n      <Nav />\n      <Banner />\n      \n      <Row \n        \n        title=\"NETFLIX ORIGINALS\" \n        \n        fetchUrl={requests.fetchNetflixOriginals}\n        isLargeRow={true}\n\n        />\n      <Row title=\"Trending Now\" fetchUrl={requests.fetchTrending} />\n      <Row title=\"Top Rated\" fetchUrl={requests.fetchTopRated} />\n      <Row title=\"Action Movies\" fetchUrl={requests.fetchActionMovies} />\n      <Row title=\"Comedy Movies\" fetchUrl={requests.fetchComedyMovies} />\n      <Row title=\"Horror Movies\" fetchUrl={requests.fetchHorrorMovies} />\n      <Row title=\"Romance Movies\" fetchUrl={requests.fetchRomanceMovies} />\n      <Row title=\"Docmentaries\" fetchUrl={requests.fetchDocumentaries} />\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}